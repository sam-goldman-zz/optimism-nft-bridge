"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestLibRLPWriter__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_in",
                type: "address",
            },
        ],
        name: "writeAddress",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_in",
                type: "address",
            },
        ],
        name: "writeAddressWithTaintedMemory",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_in",
                type: "bool",
            },
        ],
        name: "writeBool",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_in",
                type: "bytes",
            },
        ],
        name: "writeBytes",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "_in",
                type: "bytes[]",
            },
        ],
        name: "writeList",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_in",
                type: "string",
            },
        ],
        name: "writeString",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_in",
                type: "uint256",
            },
        ],
        name: "writeUint",
        outputs: [
            {
                internalType: "bytes",
                name: "_out",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506115f6806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637932db751161005b5780637932db75146100d157806397563ac8146100e45780639e5c65b7146100f7578063dd2062021461010a57600080fd5b80633c5cee26146100825780633cbd1712146100ab5780635e25d23f146100be575b600080fd5b61009561009036600461087b565b61011d565b6040516100a291906108cd565b60405180910390f35b6100956100b936600461091e565b61012e565b6100956100cc366004610937565b610139565b6100956100df366004610a81565b610144565b6100956100f2366004610937565b61014f565b610095610105366004610abe565b610184565b610095610118366004610b81565b61018f565b60606101288261019a565b92915050565b606061012882610254565b606061012882610267565b6060610128826102ae565b606060405161015d9061086e565b604051809103906000f080158015610179573d6000803e3d6000fd5b505061012882610267565b60606101288261031d565b606061012882610144565b60408051600180825281830190925260609160009190602082018180368337019050509050826101ea577f800000000000000000000000000000000000000000000000000000000000000061020c565b7f01000000000000000000000000000000000000000000000000000000000000005b8160008151811061021f5761021f610bca565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535092915050565b606061012861026283610361565b6102ae565b604051606082811b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602083015290610128906034016040516020818303038152906040525b606080825160011480156102dc57506080836000815181106102d2576102d2610bca565b016020015160f81c105b156102e8575081610128565b6102f4835160806104cc565b83604051602001610306929190610bf9565b604051602081830303815290604052905092915050565b6060600061032a836106c3565b9050610338815160c06104cc565b8160405160200161034a929190610bf9565b604051602081830303815290604052915050919050565b606060008260405160200161037891815260200190565b604051602081830303815290604052905060005b60208110156103ea578181815181106103a7576103a7610bca565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016156103d8576103ea565b806103e281610c57565b91505061038c565b60006103f7826020610c90565b67ffffffffffffffff81111561040f5761040f61096d565b6040519080825280601f01601f191660200182016040528015610439576020820181803683370190505b50905060005b81518110156104c357838361045381610c57565b94508151811061046557610465610bca565b602001015160f81c60f81b82828151811061048257610482610bca565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806104bb81610c57565b91505061043f565b50949350505050565b606080603884101561054b57604080516001808252818301909252906020820181803683370190505090506105018385610ca7565b60f81b8160008151811061051757610517610bca565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506106bc565b600060015b61055a8187610cfb565b15610580578161056981610c57565b9250610579905061010082610d0f565b9050610550565b61058b826001610d4c565b67ffffffffffffffff8111156105a3576105a361096d565b6040519080825280601f01601f1916602001820160405280156105cd576020820181803683370190505b5092506105da8583610ca7565b6105e5906037610ca7565b60f81b836000815181106105fb576105fb610bca565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190505b8181116106b9576101006106438284610c90565b61064f90610100610e84565b6106599088610cfb565b6106639190610e90565b60f81b83828151811061067857610678610bca565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806106b181610c57565b91505061062f565b50505b9392505050565b60608151600014156106e357505060408051600081526020810190915290565b6000805b835181101561072a5783818151811061070257610702610bca565b602002602001015151826107169190610d4c565b91508061072281610c57565b9150506106e7565b60008267ffffffffffffffff8111156107455761074561096d565b6040519080825280601f01601f19166020018201604052801561076f576020820181803683370190505b50600092509050602081015b85518310156104c357600086848151811061079857610798610bca565b6020026020010151905060006020820190506107b6838284516107f3565b8785815181106107c8576107c8610bca565b602002602001015151836107dc9190610d4c565b9250505082806107eb90610c57565b93505061077b565b8282825b6020811061082f578151835261080e602084610d4c565b925061081b602083610d4c565b9150610828602082610c90565b90506107f7565b905182516020929092036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169116179052505050565b61071c80610ea583390190565b60006020828403121561088d57600080fd5b813580151581146106bc57600080fd5b60005b838110156108b85781810151838201526020016108a0565b838111156108c7576000848401525b50505050565b60208152600082518060208401526108ec81604085016020870161089d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561093057600080fd5b5035919050565b60006020828403121561094957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106bc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109e3576109e361096d565b604052919050565b600067ffffffffffffffff831115610a0557610a0561096d565b610a3660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161099c565b9050828152838383011115610a4a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610a7257600080fd5b6106bc838335602085016109eb565b600060208284031215610a9357600080fd5b813567ffffffffffffffff811115610aaa57600080fd5b610ab684828501610a61565b949350505050565b60006020808385031215610ad157600080fd5b823567ffffffffffffffff80821115610ae957600080fd5b818501915085601f830112610afd57600080fd5b813581811115610b0f57610b0f61096d565b8060051b610b1e85820161099c565b9182528381018501918581019089841115610b3857600080fd5b86860192505b83831015610b7457823585811115610b565760008081fd5b610b648b89838a0101610a61565b8352509186019190860190610b3e565b9998505050505050505050565b600060208284031215610b9357600080fd5b813567ffffffffffffffff811115610baa57600080fd5b8201601f81018413610bbb57600080fd5b610ab6848235602084016109eb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008351610c0b81846020880161089d565b835190830190610c1f81836020880161089d565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8957610c89610c28565b5060010190565b600082821015610ca257610ca2610c28565b500390565b600060ff821660ff84168060ff03821115610cc457610cc4610c28565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610d0a57610d0a610ccc565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d4757610d47610c28565b500290565b60008219821115610d5f57610d5f610c28565b500190565b600181815b80851115610dbd57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610da357610da3610c28565b80851615610db057918102915b93841c9390800290610d69565b509250929050565b600082610dd457506001610128565b81610de157506000610128565b8160018114610df75760028114610e0157610e1d565b6001915050610128565b60ff841115610e1257610e12610c28565b50506001821b610128565b5060208310610133831016604e8410600b8410161715610e40575081810a610128565b610e4a8383610d64565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610e7c57610e7c610c28565b029392505050565b60006106bc8383610dc5565b600082610e9f57610e9f610ccc565b50069056fe608060405234801561001057600080fd5b506106fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806340c10f191161007657806395d89b411161005b57806395d89b41146101b1578063a9059cbb146101ed578063dd62ed3e1461020057600080fd5b806340c10f191461017c57806370a082311461019157600080fd5b806318160ddd116100a757806318160ddd1461013857806323b872dd1461014f578063313ce5671461016257600080fd5b806306fdde03146100c3578063095ea7b314610115575b600080fd5b6100ff6040518060400160405280600481526020017f546573740000000000000000000000000000000000000000000000000000000081525081565b60405161010c9190610511565b60405180910390f35b6101286101233660046105ad565b61022b565b604051901515815260200161010c565b61014160005481565b60405190815260200161010c565b61012861015d3660046105d7565b610241565b61016a601281565b60405160ff909116815260200161010c565b61018f61018a3660046105ad565b61031b565b005b61014161019f366004610613565b60016020526000908152604090205481565b6100ff6040518060400160405280600381526020017f545354000000000000000000000000000000000000000000000000000000000081525081565b6101286101fb3660046105ad565b6103c6565b61014161020e366004610635565b600260209081526000928352604080842090915290825290205481565b60006102383384846103d3565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146103065773ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020546102d4908390610697565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610311848484610442565b5060019392505050565b8060005461032991906106ae565b600090815573ffffffffffffffffffffffffffffffffffffffff831681526001602052604090205461035c9082906106ae565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103ba9085815260200190565b60405180910390a35050565b6000610238338484610442565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054610473908290610697565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822093909355908416815220546104b09082906106ae565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104359085815260200190565b600060208083528351808285015260005b8181101561053e57858101830151858201604001528201610522565b81811115610550576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146105a857600080fd5b919050565b600080604083850312156105c057600080fd5b6105c983610584565b946020939093013593505050565b6000806000606084860312156105ec57600080fd5b6105f584610584565b925061060360208501610584565b9150604084013590509250925092565b60006020828403121561062557600080fd5b61062e82610584565b9392505050565b6000806040838503121561064857600080fd5b61065183610584565b915061065f60208401610584565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156106a9576106a9610668565b500390565b600082198211156106c1576106c1610668565b50019056fea26469706673582212202815312896f87dd17755da274a3e8739684a4ded8acfa86d8baf4fafbb3d4c0864736f6c63430008090033a264697066735822122038f74275603878d0c91c035d2901f93257dda376e2bbaab6337b4d33724838e864736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestLibRLPWriter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestLibRLPWriter__factory = TestLibRLPWriter__factory;
TestLibRLPWriter__factory.bytecode = _bytecode;
TestLibRLPWriter__factory.abi = _abi;
//# sourceMappingURL=TestLibRLPWriter__factory.js.map