/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  L2StandardERC721,
  L2StandardERC721Interface,
} from "../L2StandardERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fb338038062001fb383398101604081905262000034916200022f565b8151829082906200004d9060009060208501906200009f565b508051620000639060019060208401906200009f565b5050600680546001600160a01b039586166001600160a01b031991821617909155600780549690951695169490941790925550620002fc915050565b828054620000ad90620002bf565b90600052602060002090601f016020900481019282620000d157600085556200011c565b82601f10620000ec57805160ff19168380011785556200011c565b828001600101855582156200011c579182015b828111156200011c578251825591602001919060010190620000ff565b506200012a9291506200012e565b5090565b5b808211156200012a57600081556001016200012f565b80516001600160a01b03811681146200015d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018a57600080fd5b81516001600160401b0380821115620001a757620001a762000162565b604051601f8301601f19908116603f01168101908282118183101715620001d257620001d262000162565b81604052838152602092508683858801011115620001ef57600080fd5b600091505b83821015620002135785820183015181830184015290820190620001f4565b83821115620002255760008385830101525b9695505050505050565b600080600080608085870312156200024657600080fd5b620002518562000145565b9350620002616020860162000145565b60408601519093506001600160401b03808211156200027f57600080fd5b6200028d8883890162000178565b93506060870151915080821115620002a457600080fd5b50620002b38782880162000178565b91505092959194509250565b600181811c90821680620002d457607f821691505b60208210811415620002f657634e487b7160e01b600052602260045260246000fd5b50919050565b611ca7806200030c6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063ae1f6aaf11610081578063c01e1bd611610066578063c01e1bd614610278578063c87b56dd14610298578063e985e9c5146102ab57600080fd5b8063ae1f6aaf14610245578063b88d4fde1461026557600080fd5b806370a08231146101f657806395d89b41146102175780639dc29fac1461021f578063a22cb4651461023257600080fd5b806323b872dd116100ee57806323b872dd146101aa57806340c10f19146101bd57806342842e0e146101d05780636352211e146101e357600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610195575b600080fd5b61013361012e36600461176a565b6102f4565b60405190151581526020015b60405180910390f35b6101506103b4565b60405161013f91906117fd565b61017061016b366004611810565b610446565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013f565b6101a86101a3366004611852565b61050b565b005b6101a86101b836600461187c565b610664565b6101a86101cb366004611852565b6106eb565b6101a86101de36600461187c565b6107b0565b6101706101f1366004611810565b6107cb565b6102096102043660046118b8565b610869565b60405190815260200161013f565b61015061091d565b6101a861022d366004611852565b61092c565b6101a86102403660046118d3565b6109e4565b6007546101709073ffffffffffffffffffffffffffffffffffffffff1681565b6101a861027336600461193e565b610ae1565b6006546101709073ffffffffffffffffffffffffffffffffffffffff1681565b6101506102a6366004611810565b610b6f565b6101336102b9366004611a38565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27f1d1d8b63000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000084167f01ffc9a70000000000000000000000000000000000000000000000000000000014806103ac57507fffffffff00000000000000000000000000000000000000000000000000000000848116908216145b949350505050565b6060600080546103c390611a6b565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611a6b565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff166104e25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610516826107cb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105ba5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104d9565b3373ffffffffffffffffffffffffffffffffffffffff821614806105e357506105e381336102b9565b6106555760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104d9565b61065f8383610c72565b505050565b61066e3382610d12565b6106e05760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104d9565b61065f838383610e64565b60075473ffffffffffffffffffffffffffffffffffffffff1633146107525760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064016104d9565b61075c8282611097565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516107a491815260200190565b60405180910390a25050565b61065f83838360405180602001604052806000815250610ae1565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806108635760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104d9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166108f45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104d9565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546103c390611a6b565b60075473ffffffffffffffffffffffffffffffffffffffff1633146109935760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064016104d9565b61099c816110b5565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516107a491815260200190565b73ffffffffffffffffffffffffffffffffffffffff8216331415610a4a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104d9565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610aeb3383610d12565b610b5d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104d9565b610b6984848484611182565b50505050565b60008181526002602052604090205460609073ffffffffffffffffffffffffffffffffffffffff16610c095760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104d9565b6000610c2060408051602081019091526000815290565b90506000815111610c405760405180602001604052806000815250610c6b565b80610c4a8461120b565b604051602001610c5b929190611abf565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610ccc826107cb565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16610da95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084016104d9565b6000610db4836107cb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e2357508373ffffffffffffffffffffffffffffffffffffffff16610e0b84610446565b73ffffffffffffffffffffffffffffffffffffffff16145b806103ac575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff166103ac565b8273ffffffffffffffffffffffffffffffffffffffff16610e84826107cb565b73ffffffffffffffffffffffffffffffffffffffff1614610f0d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016104d9565b73ffffffffffffffffffffffffffffffffffffffff8216610f955760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104d9565b610fa0600082610c72565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805460019290610fd6908490611b1d565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290611011908490611b34565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6110b182826040518060200160405280600081525061133d565b5050565b60006110c0826107cb565b90506110cd600083610c72565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120805460019290611103908490611b1d565b909155505060008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555183919073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b61118d848484610e64565b611199848484846113c6565b610b695760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104d9565b60608161124b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611275578061125f81611b4c565b915061126e9050600a83611bb4565b915061124f565b60008167ffffffffffffffff8111156112905761129061190f565b6040519080825280601f01601f1916602001820160405280156112ba576020820181803683370190505b5090505b84156103ac576112cf600183611b1d565b91506112dc600a86611bc8565b6112e7906030611b34565b60f81b8183815181106112fc576112fc611bdc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611336600a86611bb4565b94506112be565b61134783836115ab565b61135460008484846113c6565b61065f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104d9565b600073ffffffffffffffffffffffffffffffffffffffff84163b156115a0576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a029061143d903390899088908890600401611c0b565b602060405180830381600087803b15801561145757600080fd5b505af19250505080156114a5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526114a291810190611c54565b60015b611555573d8080156114d3576040519150601f19603f3d011682016040523d82523d6000602084013e6114d8565b606091505b50805161154d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104d9565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001490506103ac565b506001949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661160e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104d9565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156116805760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104d9565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054600192906116b6908490611b34565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461176757600080fd5b50565b60006020828403121561177c57600080fd5b8135610c6b81611739565b60005b838110156117a257818101518382015260200161178a565b83811115610b695750506000910152565b600081518084526117cb816020860160208601611787565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610c6b60208301846117b3565b60006020828403121561182257600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461184d57600080fd5b919050565b6000806040838503121561186557600080fd5b61186e83611829565b946020939093013593505050565b60008060006060848603121561189157600080fd5b61189a84611829565b92506118a860208501611829565b9150604084013590509250925092565b6000602082840312156118ca57600080fd5b610c6b82611829565b600080604083850312156118e657600080fd5b6118ef83611829565b91506020830135801515811461190457600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561195457600080fd5b61195d85611829565b935061196b60208601611829565b925060408501359150606085013567ffffffffffffffff8082111561198f57600080fd5b818701915087601f8301126119a357600080fd5b8135818111156119b5576119b561190f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156119fb576119fb61190f565b816040528281528a6020848701011115611a1457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a4b57600080fd5b611a5483611829565b9150611a6260208401611829565b90509250929050565b600181811c90821680611a7f57607f821691505b60208210811415611ab9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611ad1818460208801611787565b835190830190611ae5818360208801611787565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611b2f57611b2f611aee565b500390565b60008219821115611b4757611b47611aee565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b7e57611b7e611aee565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611bc357611bc3611b85565b500490565b600082611bd757611bd7611b85565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611c4a60808301846117b3565b9695505050505050565b600060208284031215611c6657600080fd5b8151610c6b8161173956fea2646970667358221220c182f7703174b78ae7abf4a7fb911c000df17d669047e9a25d533a21a894e2cd64736f6c63430008090033";

type L2StandardERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2StandardERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2StandardERC721__factory extends ContractFactory {
  constructor(...args: L2StandardERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _l2Bridge: string,
    _l1Token: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2StandardERC721> {
    return super.deploy(
      _l2Bridge,
      _l1Token,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<L2StandardERC721>;
  }
  getDeployTransaction(
    _l2Bridge: string,
    _l1Token: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l2Bridge,
      _l1Token,
      _name,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): L2StandardERC721 {
    return super.attach(address) as L2StandardERC721;
  }
  connect(signer: Signer): L2StandardERC721__factory {
    return super.connect(signer) as L2StandardERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2StandardERC721Interface {
    return new utils.Interface(_abi) as L2StandardERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2StandardERC721 {
    return new Contract(address, _abi, signerOrProvider) as L2StandardERC721;
  }
}
